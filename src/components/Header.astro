---
import ThemeToggle from './ThemeToggle.astro'

const navItems = [
  {
    title: 'Experiencia',
    label: 'experiencia',
    url: '#experiencia'
  },
  {
    title: 'Formación',
    label: 'formacion',
    url: '#formacion'
  },
  {
    title: 'Proyectos',
    label: 'proyectos',
    url: '#proyectos'
  },
  {
    title: 'Sobre mí',
    label: 'sobre-mi',
    url: '#sobre-mi'
  }
]
---
<header id="header" class="flex top-0 z-40 justify-center items-center py-10 w-full xl:w-[1120px] mx-auto">
  <nav class="flex justify-center items-center">
    {
      navItems.map((link) => (
        <a
          class="relative px-2 transition hover:text-red-700 dark:hover:text-red-700"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>

</header>

<style>
  #header {
    border: none;
    background-color: transparent;
    border-radius: 0;
    transition: all;
    transition-duration: 0.3s;
    transition-timing-function: ease-in-out;
  }
  #header.scrolled {
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 15px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding: 0.5rem 1rem;
    width: auto;
    justify-content: center;
    text-align: center;
    top: 2%;
    left: 50%;
    transform: translateX(-50%);
  }
  #header.scrolled.dark {
    background-color: rgba(218, 218, 218, 0.534);
    border-radius: 15px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding: 0.5rem 1rem;
    width: auto;
    justify-content: center;
    text-align: center;
  }
</style>

<script>
  window.addEventListener('scroll', function() {
    const header = document.getElementById('header');
    if (header) {
      if (window.scrollY > 50) {
        header.classList.add('scrolled');
        header.classList.add('fixed');
        header.classList.remove('flex');
        header.classList.remove('xl:w-[1120px]');
        if (document.documentElement.classList.contains('dark')) {
          header.classList.add('dark');
        }
      } else {
        header.classList.remove('scrolled');
        header.classList.remove('fixed');
        header.classList.add('flex');
        header.classList.remove('dark');
      }
    }
  });
  
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-red-700")
              item.classList.add("dark:text-red-700")
            } else {
              item.classList.remove("text-red-700")
              item.classList.remove("dark:text-red-700")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>